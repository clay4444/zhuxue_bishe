<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.clay</groupId>
    <artifactId>AkkaScheduler</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>db</module>
        <module>utils</module>
        <module>core</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.major.version>2.12</scala.major.version>
        <scala.minor.version>5</scala.minor.version>
        <scala.version>${scala.major.version}.${scala.minor.version}</scala.version>
        <akka.version>2.5.9</akka.version>
        <!-- 注意与zookeeper版本兼容 -->
        <curator.version>2.12.0</curator.version>
        <scalatest.version>3.0.5</scalatest.version>
        <apache.commons.version>2.6</apache.commons.version>
        <slick.version>3.2.3</slick.version>
        <mysql.jdbc.version>8.0.16</mysql.jdbc.version>
        <akka.quartz.version>1.6.1-akka-2.5.x</akka.quartz.version>
        <hikaricp.version>2.7.8</hikaricp.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scalactic</groupId>
                <artifactId>scalactic_${scala.major.version}</artifactId>
                <version>${scalatest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.major.version}</artifactId>
                <version>${scalatest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster_${scala.major.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster-tools_${scala.major.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster-metrics_${scala.major.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-remote_${scala.major.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_${scala.major.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.romix.akka</groupId>
                <artifactId>akka-kryo-serialization_${scala.major.version}</artifactId>
                <version>0.5.2</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-slf4j_${scala.major.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.3.1</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache.commons.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.slick</groupId>
                <artifactId>slick_${scala.major.version}</artifactId>
                <version>${slick.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.slick</groupId>
                <artifactId>slick-hikaricp_${scala.major.version}</artifactId>
                <version>${slick.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.slick</groupId>
                <artifactId>slick-codegen_${scala.major.version}</artifactId>
                <version>${slick.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>com.cronutils</groupId>
                <artifactId>cron-utils</artifactId>
                <version>7.0.1</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.enragedginger/akka-quartz-scheduler -->
            <dependency>
                <groupId>com.enragedginger</groupId>
                <artifactId>akka-quartz-scheduler_${scala.major.version}</artifactId>
                <version>${akka.quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikaricp.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- 这个插件是用来让maven能够编译、测试、运行scala项目的 -->
                <plugin>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>maven-scala-plugin</artifactId>
                    <version>2.15.2</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <args>
                            <arg>-target:jvm-1.7</arg>
                        </args>
                    </configuration>
                </plugin>
                <!-- 配置使用和scalatest配套的maven插件帮助实现单元测试报告 -->
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                        <filereports>WDF TestSuite.txt</filereports>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- maven-jar-plugin用于生成META-INF/MANIFEST.MF文件的部分内容 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <archive>
                            <!--不打包依赖的jar,把依赖的jar copy到lib目录，和生成的jar放在同一级目录下-->
                            <manifest>
                                <addClasspath>true</addClasspath>       <!-- 在MANIFEST.MF加上Class-Path项并配置依赖包， -->
                                <classpathPrefix>lib/</classpathPrefix>   <!-- 指定依赖包所在目录 -->
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- 上一个插件只是生成META-INF/MANIFEST.MF文件的，下面这个插件才是真正将依赖包拷贝到指定目录下的 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                    <executions>
                        <execution>
                            <id>copy</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <!-- ${project.build.directory} 构建目录，缺省为target -->
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>